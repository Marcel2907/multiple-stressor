# anova_sulfuri <- lm(asin(sqrt(Abundance)) ~F*G*M*A*T, data = df_sulfuri)
anova_sulfuri <- lm((Abundance)^(1/3) ~F*G*M*A*T, data = df_sulfuri)
# Chunk 31
autoplot(anova_sulfuri)
# anova(anova_sulfuri)
# summary(anova_sulfuri)
# Chunk 32
abiotic<- ps_relative@sam_data %>%
as_tibble() %>%
select(Treatment,Temperature, Combinations, Temperature_factor, Lable,
Name,F,G,M,A, Oxygen, TN,TC, pH,Stressor_numeric, Stressor) %>%
mutate(T2=Temperature^2,T=Temperature_factor) %>%
select(-Temperature)  %>%
reorder_levels(Combinations, order = c("Control","F","G","M","A","FG","FM","FA","GM",
"GA","MA","FGM","FGA","GMA","FMA","FGMA")) %>%
dplyr::filter(Treatment!="ori")
#calculating mean of oxygen and pH
abiotic_means <- abiotic %>%
filter(T %in% c("20", "24", "28")) %>%
dplyr::group_by(Treatment, Combinations, T, Stressor,Stressor_numeric) %>%
dplyr::summarize(Oxygen_mean = mean(Oxygen),
pH_mean = mean(pH),
Oxygen_SE = stderr(Oxygen),
pH_SE = stderr(pH),
TN_mean = mean(TN),
TC_mean = mean(TC),
TN_SE = stderr(TN),
TC_SE = stderr(TC))
# Chunk 33
oxygen_anova <- lm(Oxygen ~F*G*M*A*T, data = abiotic)
autoplot(oxygen_anova)
# anova(oxygen_anova)
# summary(oxygen_anova)
# Chunk 34
plot_oxygen_means <- abiotic_means %>%
ggplot(aes(x=T, y=Oxygen_mean, col=Combinations, group=Combinations)) +
geom_errorbar(aes(ymin=Oxygen_mean-Oxygen_SE, ymax=Oxygen_mean+Oxygen_SE),
width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
geom_line(position = position_dodge(width = 0.4)) +
geom_point(aes(shape=Stressor), size = 3, position = position_dodge(width = 0.4)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
scale_colour_viridis_d(direction = -1)+
labs(x="Temperature", y="Oxygen[%] (mean)")
plot_oxygen_numeric_means <- abiotic_means %>%
ggplot(aes(x=Stressor_numeric, y=Oxygen_mean, col=T)) +
geom_point(aes(shape= T), size = 3, position = position_dodge(width = 0.4)) +
geom_errorbar(aes(ymin=Oxygen_mean-Oxygen_SE, ymax=Oxygen_mean+Oxygen_SE),
width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
labs(y="Oxygen[%] (mean)",x="Number of drivers ")
#plot oxygen
plot_oxygen_means + plot_oxygen_numeric_means
# Chunk 35
pH_anova <- lm(pH ~F*G*M*A*T, data = abiotic)
autoplot(pH_anova)
# anova(pH_anova)
# summary(pH_anova)
# Chunk 36
#pH
plot_pH_means <- abiotic_means %>%
ggplot(aes(x=T, y=pH_mean, col=Combinations, group=Combinations)) +
geom_errorbar(aes(ymin=pH_mean-pH_SE, ymax=pH_mean+pH_SE),
width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
geom_line(position = position_dodge(width = 0.4)) +
geom_point(aes(shape=Stressor), size = 3, position = position_dodge(width = 0.4)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
scale_colour_viridis_d(direction = -1)+
labs(x="Temperature", y="pH (mean)")
plot_pH_means_numeric <- abiotic_means %>%
ggplot(aes(x=Stressor_numeric, y=pH_mean, col=T)) +
geom_point(aes(shape=T), size = 3, position = position_dodge(width = 0.4)) +
geom_errorbar(aes(ymin=pH_mean-pH_SE, ymax=pH_mean+pH_SE), width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
labs(y="pH (mean)",x="Number of drivers ")
#plot pH
plot_pH_means + plot_pH_means_numeric
# Chunk 37
tc_anova <- lm((1/TC^2) ~F*G*M*A*T, data = abiotic)
# tc_anova1 <- lm(log10(TC) ~F*G*M*A*T, data = abiotic)
# tc_anova2 <- lm((TC)^(1/4) ~F*G*M*A*T, data = abiotic)
autoplot(tc_anova)
# anova(tc_anova)
# summary(tc_anova)
# Chunk 38
#total carbon
plot_TC_means <- abiotic_means %>%
ggplot(aes(x=T, y=TC_mean, col=Combinations, group=Combinations)) +
geom_errorbar(aes(ymin=TC_mean-TC_SE, ymax=TC_mean+TC_SE),
width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
geom_line(position = position_dodge(width = 0.4)) +
geom_point(aes(shape=Stressor), size = 3, position = position_dodge(width = 0.4)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
scale_colour_viridis_d(direction = -1)+
labs(x="Temperature", y="TC (mean)")
plot_TC_means_numeric <- abiotic_means %>%
ggplot(aes(x=Stressor_numeric, y=TC_mean, col=T)) +
geom_point(aes(shape=T), size = 3, position = position_dodge(width = 0.4)) +
geom_errorbar(aes(ymin=TC_mean-TC_SE, ymax=TC_mean+TC_SE),
width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
labs(y="TC (mean)", x="Number of drivers ")
#plot total carbon
plot_TC_means + plot_TC_means_numeric
# Chunk 39
abiotic.F <- abiotic %>% dplyr::filter(F==1)
abiotic.noF <- abiotic %>% dplyr::filter(F==0)
abiotic.F %>% ggplot(aes(TN)) + geom_histogram() + labs(title = "Distr of TN when there is F") + facet_grid(Combinations~T) +
abiotic.noF %>% ggplot(aes(TN)) + geom_histogram() + labs(title = "Distr of TN when there is no F") + facet_wrap(~T) +
plot_layout(ncol = 1)
rm(abiotic.F,abiotic.noF)
abiotic.outliers.excluded <- abiotic %>%
mutate(TN.no.outliers = ifelse(F=="1" & TN<5, NA,
ifelse(F=="0" & TN>20,NA,TN))) %>%
na.omit()
# abiotic.outliers.excluded %>% ggplot(aes(TN.no.outliers)) + geom_histogram() + labs(title = "Distr of TN") + facet_grid(F~T)
# Chunk 40
# tn_anova <- lm(TN ~F*G*M*A*T, data = abiotic)
# tn_anova.no.outliers <- lm(TN.no.outliers+0.001 ~ F*G*M*A*T, data = abiotic.outliers.excluded)
# autoplot(tn_anova.no.outliers)
# b <- boxcox(tn_anova.no.outliers, plotit = TRUE, lambda = seq(-1, 2, by = 0.05))
tn_anova.no.outliers <- lm(sqrt(TN.no.outliers) ~ F*G*M*A*T, data = abiotic.outliers.excluded)
autoplot(tn_anova.no.outliers)
# anova(tn_anova.no.outliers)
# summary(tn_anova.no.outliers)
# Chunk 41
abiotic %>%
dplyr::filter(Stressor!="ori") %>%
ggplot(aes(Combinations, TN)) +
geom_point() +
facet_wrap(~Temperature_factor)
# Chunk 42
#total nitrogen
plot_TN_means <- abiotic_means %>%
ggplot(aes(x=T, y=TN_mean, col=Combinations, group=Combinations)) +
geom_errorbar(aes(ymin=TN_mean-TN_SE, ymax=TN_mean+TN_SE),
width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
geom_line(position = position_dodge(width = 0.4)) +
geom_point(aes(shape=Stressor), size = 3, position = position_dodge(width = 0.4)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
scale_colour_viridis_d(direction = -1)+
labs(x="Temperature", y="TN (mean)")
plot_TN_means_numeric <- abiotic_means %>%
ggplot(aes(x=Stressor_numeric, y=TN_mean, col=T)) +
geom_point(aes(shape=T), size = 3, position = position_dodge(width = 0.4)) +
geom_errorbar(aes(ymin=TN_mean-TN_SE, ymax=TN_mean+TN_SE),
width=0.1,alpha=0.4,position = position_dodge(width = 0.4))+
theme_bw() +
theme(panel.grid = element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.position = "none")+
labs(y="TN (mean)", x="Number of drivers ")
#plot nitrogen
plot_TN_means +theme(legend.position = "bottom",
legend.box = "vertical")  + plot_TN_means_numeric + theme(legend.position = "bottom",
legend.box = "vertical")
# Chunk 43
plot_pH_means <- plot_pH_means +
theme(legend.position = "bottom",
legend.box = "vertical",
legend.text = element_text(size=12),
legend.title = element_text(size=15)) +
labs(col = "Stressor combinations",shape= "")
plot_pH_means_numeric <- plot_pH_means_numeric +
theme(legend.position = "bottom",
legend.box = "vertical",
legend.text = element_text(size=12),
legend.title = element_text(size=15)) +
labs(col = "Temperature", shape= "Temperature")
plot_diversity_means +  plot_diversity_means_numeric + nmds1_plot_temperature +
plot_NMDS1_means_numeric + nmds1_plot_temperature_subset + plot_NMDS1_means_numeric_subset +
plot_oxygen_means + plot_oxygen_numeric_means + plot_pH_means + plot_pH_means_numeric +
plot_annotation(tag_levels = "a") + plot_layout(ncol = 2)
# Chunk 44
plot_TC_means <- plot_TC_means +
theme(legend.position = "bottom",
legend.box = "vertical",
legend.text = element_text(size=12),
legend.title = element_text(size=15)) +
labs(col = "Stressor combinations", shape = "")
plot_TC_means_numeric <- plot_TC_means_numeric +
theme(legend.position = "bottom",
legend.box = "vertical",
legend.text = element_text(size=12),
legend.title = element_text(size=15))+
labs(col = "Temperature", shape = "Temperature")
NMDS2_plot_temperature + plot_NMDS2_means_numeric + NMDS2_plot_temperature_subset +
plot_NMDS2_means_numeric_subset + plot_TN_means + plot_TN_means_numeric +
plot_TC_means + plot_TC_means_numeric +
plot_annotation(tag_levels = "a") + plot_layout(ncol = 2)
# Chunk 45
#NMDS1
nmds1 <- extract_test_values(anova_NMDS1, "NMDS1")
#NMDS2
nmds2 <- extract_test_values(anova_NMDS2, "NMDS2")
#NMDS1_CB_SB /1.8
nmds1_mixed <- extract_test_values(anova_NMDS1_mixed, "NMDS1_CB_SB")
#NMDS2_CB_SB
nmds2_mixed <- extract_test_values(anova_NMDS2_mixed, "NMDS2_CB_SB")
#Richness Shannon
richness <- extract_test_values(anova_diversity, "Shannon_richness")
#Tychonema Cyanobacteria /2.2
tyochonea <- extract_test_values(anova_tychonea, "Tychonema")
#Sulfuricurvum /1.27
sulfuri <- extract_test_values(anova_sulfuri, "Sulfuricurvum")
#Oxygen /9.26
oxygen <- extract_test_values(oxygen_anova, "oxygen")
#pH /2.62
pH <- extract_test_values(pH_anova, "pH")
#TN /93.77
tn <- extract_test_values(tn_anova.no.outliers, "tn")
#TC /65
tc <- extract_test_values(tc_anova, "tc")
# all abiotic and all heat
all_abiotic <- rbind(oxygen, pH, tn, tc)
all_heat <- rbind(tyochonea,sulfuri,nmds1,nmds2,nmds1_mixed,
nmds2_mixed,richness,oxygen,pH,tn,tc) %>%
reorder_levels(variable,order=c("Tychonema","Sulfuricurvum","NMDS1","NMDS2",
"NMDS1_CB_SB","NMDS2_CB_SB","Shannon_richness",
"oxygen", "pH", "tn","tc"))
# Chunk 46
all_heat %>%
filter(term != "(Intercept)", term!="Residuals")%>%
ggplot(aes(x = variable, y = treatment_combination, fill=color)) +
geom_tile() +
scale_fill_gradient2(low="navy", mid="white", high="red", midpoint=0,
breaks=c(-1,0,1), na.value="lightgrey", limits=c(-1,1)) +
theme_bw()+
theme(axis.text.x = element_text(angle = 50, hjust = 1,size=10),
axis.text.y = element_text(angle = 0, hjust = 1,size=10),
strip.placement = "inside") +
labs(y="Model term [main effect or interaction]")
# Chunk 47
all_heat %>%
filter(treatment_combination %in% c("F","A","F:A","F:A:T24","F:A:T28"),
variable != "tn", variable != "tc", color != "NA") %>%
ggplot()+
geom_point(aes(x=variable, y=color, shape=treatment_combination,
col=treatment_combination), size=4)+
geom_hline(yintercept=0) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(angle = 50, hjust = 1)) +
labs(y="standardised estimate")
# Chunk 48
abiotic<- ps_relative@sam_data %>%
as_tibble() %>%
select(Treatment,Temperature, Combinations, Temperature_factor,
Lable, Name, F, G, M, A, Oxygen, TN, TC, pH,
Stressor_numeric, Stressor) %>%
filter(Treatment!="ori")  %>%
mutate(T2=Temperature^2,T=as.factor(Temperature)) %>%
select(-Temperature)
# abiotic$Oxygen <- (abiotic$Oxygen-mean(abiotic$Oxygen))/sd(abiotic$Oxygen)
# abiotic$pH <- (abiotic$pH-mean(abiotic$pH))/sd(abiotic$pH)
# abiotic$TN <- (abiotic$TN-mean(abiotic$TN))/sd(abiotic$TN)
# abiotic$TC <- (abiotic$TC-mean(abiotic$TC))/sd(abiotic$TC)
# mds_whole_res$NMDS1 <- (mds_whole_res$NMDS1-mean(mds_whole_res$NMDS1))/sd(mds_whole_res$NMDS1)
# mds_whole_res$NMDS2 <- (mds_whole_res$NMDS2-mean(mds_whole_res$NMDS2))/sd(mds_whole_res$NMDS2)
# mds_whole_res_subset$NMDS1 <- (mds_whole_res_subset$NMDS1-mean(mds_whole_res_subset$NMDS1))/
#   sd(mds_whole_res_subset$NMDS1)
# mds_whole_res_subset$NMDS2 <- (mds_whole_res_subset$NMDS2-mean(mds_whole_res_subset$NMDS2))/
#   sd(mds_whole_res_subset$NMDS2)
# div_raw$Shannon <- (div_raw$Shannon-mean(div_raw$Shannon))/sd(div_raw$Shannon)
# df_cyano$Abundance <- (df_cyano$Abundance-mean(df_cyano$Abundance))/sd(df_cyano$Abundance)
# df_sulfuri$Abundance <- (df_sulfuri$Abundance-mean(df_sulfuri$Abundance))/sd(df_sulfuri$Abundance)
# real.rt <- function(x, root=3) {
#     sign(x) * abs(x)^(1/root)
# }
# Chunk 49
#oxygen
oxygen_anova_numeric <- lm(scale(Oxygen) ~T+T:Stressor_numeric, data=abiotic)
oxy_slope<- tidy(oxygen_anova_numeric ,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
oxy_slope$organisation="ecosystem"
oxy_slope$variable="oxygen"
oxy_slope$Fertilizer <- "Yes"
autoplot(oxygen_anova_numeric)
## getting f test parameters
oxygen_anova2_numeric <- lm(scale(Oxygen) ~T*Stressor_numeric, data=abiotic)
anova(oxygen_anova2_numeric)
summary(oxygen_anova2_numeric)
# Chunk 50
#pH
# pH_anova_numeric_old <- lm(pH ~T + T:Stressor_numeric, data=abiotic)
# b <- boxcox(pH_anova_numeric_old, plotit = TRUE, lambda = seq(-3, 3, by = 0.1))
#
# pH_anova_numeric_old2 <- lm(scale(log10(pH)) ~T + T:Stressor_numeric, data=abiotic)
# abiotic$pH_stand <- scale(abiotic$pH)
# abiotic$pH_stand_transformed <- abiotic$pH_stand^(1/3)
# abiotic$pH_stand_transformed2 <- nthroot(abiotic$pH_stand,3)
# abiotic$pH_transformed <- abiotic$pH^(1/3)
# abiotic$pH_transformed_stand <- scale(abiotic$pH_transformed)
#
# abiotic %>% ggplot(aes(pH)) + geom_histogram() + labs(title="original") +
# abiotic %>% ggplot(aes(pH_stand)) + geom_histogram() + labs(title="standardized") +
# abiotic %>% ggplot(aes(pH_stand_transformed)) + geom_histogram() + labs(title="standardized then transformed") +
# abiotic %>% ggplot(aes(pH_transformed)) + geom_histogram() + labs(title="transformed") +
# abiotic %>% ggplot(aes(pH_transformed_stand)) + geom_histogram() + labs(title="transformed then standardized")
abiotic$Fertilizer <- ifelse(abiotic$F==1, "Fert", "NotFert")
abiotic$F_and_T <- with(abiotic, interaction(Fertilizer,T))
pH_anova_numeric <- lm(scale(pH) ~-1+F_and_T + F_and_T:Stressor_numeric, data=abiotic)
# pH_anova_numeric1 <- lm(pH_stand ~-1+F_and_T*Stressor_numeric, data=abiotic)
# all.equal(predict(pH_anova_numeric),predict(pH_anova_numeric1))
pH_slope <- tidy(pH_anova_numeric,conf.int = TRUE) %>%
slice_tail(n = 6)
pH_slope$term <- rep(c("T20:Stressor_numeric","T24:Stressor_numeric","T28:Stressor_numeric"),each=2)
pH_slope$organisation="ecosystem"
pH_slope$variable="pH"
pH_slope$Fertilizer <- rep(c("Yes","No"),3)
autoplot(pH_anova_numeric)
## getting f test parameters
pH_anova2_numeric <- lm(scale(pH) ~ F*T*Stressor_numeric, data=abiotic)
anova(pH_anova2_numeric)
summary(pH_anova2_numeric)
# Chunk 51
abiotic.outliers.excluded <- abiotic %>%
mutate(TN.no.outliers = ifelse(F=="1" & TN<5, NA,
ifelse(F=="0" & TN>20,NA,TN))) %>%
na.omit()
# tn_anova_numeric <- lm(TN.no.outliers+0.001 ~ 1+F_and_T + F_and_T:Stressor_numeric, data=abiotic.outliers.excluded)
# b <- boxcox(tn_anova_numeric, plotit = TRUE, lambda = seq(-3, 3, by = 0.1))
# autoplot(tn_anova_numeric)
tn_anova_numeric <- lm(sqrt(TN.no.outliers) ~ 1+F_and_T + F_and_T:Stressor_numeric, data=abiotic.outliers.excluded)
tn_slope <- tidy(tn_anova_numeric,conf.int = TRUE) %>%
slice_tail(n = 6)
tn_slope$term <- rep(c("T20:Stressor_numeric","T24:Stressor_numeric","T28:Stressor_numeric"),each=2)
tn_slope$organisation="ecosystem"
tn_slope$variable="total nitrogen"
tn_slope$Fertilizer <- rep(c("Yes","No"),3)
autoplot(tn_anova_numeric)
## getting f test parameters
tn_anova2_numeric <- lm(scale(sqrt(TN.no.outliers)) ~ F*T*Stressor_numeric, data=abiotic.outliers.excluded)
anova(tn_anova2_numeric)
summary(tn_anova2_numeric)
# Chunk 52
#tc
# tc_anova_numeric <- lm(TC ~T+T:Stressor_numeric, data=abiotic)
# b <- boxcox(tc_anova_numeric, plotit = TRUE, lambda = seq(-8, 1.5, by = 0.1))
# lambda <- round(b$x[which.max(b$y)],1)
abiotic$TC_squared_inv <- scale(1/(abiotic$TC^2))
tc_anova_numeric <- lm(TC_squared_inv ~T+T:Stressor_numeric, data=abiotic)
tc_slope <- tidy(tc_anova_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
tc_slope$organisation="ecosystem"
tc_slope$variable="total carbon"
tc_slope$Fertilizer <- "Yes"
autoplot(tc_anova_numeric)
## getting f test parameters
tc_anova2_numeric <- lm(scale(TC_squared_inv) ~T*Stressor_numeric, data=abiotic)
anova(tc_anova2_numeric)
summary(tc_anova2_numeric)
# Chunk 53
#NMDS1
anova_NMDS1_numeric <- lm(scale(NMDS1) ~T+T:Stressor_numeric, data=mds_whole_res)
nmds1_slope <- tidy(anova_NMDS1_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
nmds1_slope$organisation="community"
nmds1_slope$variable="NMDS1"
nmds1_slope$Fertilizer <- "Yes"
autoplot(anova_NMDS1_numeric)
## getting f test parameters
anova2_NMDS1_numeric <- lm(scale(NMDS1) ~T*Stressor_numeric, data=mds_whole_res)
anova(anova2_NMDS1_numeric)
summary(anova2_NMDS1_numeric)
# Chunk 54
#NMDS2
anova_NMDS2_numeric <- lm(scale(NMDS2) ~T+T:Stressor_numeric, data=mds_whole_res)
nmds2_slope <- tidy(anova_NMDS2_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
nmds2_slope$organisation="community"
nmds2_slope$variable="NMDS2"
nmds2_slope$Fertilizer <- "Yes"
autoplot(anova_NMDS2_numeric)
## getting f test parameters
anova2_NMDS2_numeric <- lm(scale(NMDS2) ~T*Stressor_numeric, data=mds_whole_res)
anova(anova2_NMDS2_numeric)
summary(anova2_NMDS2_numeric)
# Chunk 55
#NMDS1_subset
anova_NMDS1_mixed_numeric <- lm(scale(NMDS1) ~T+T:Stressor_numeric, data=mds_whole_res_subset)
nmds1_subset_slope <- tidy(anova_NMDS1_mixed_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
nmds1_subset_slope$organisation="community"
nmds1_subset_slope$variable="NMDS1_subpopulation"
nmds1_subset_slope$Fertilizer <- "Yes"
autoplot(anova_NMDS1_mixed_numeric)
# Chunk 56
#NMDS2_subset
anova_NMDS2_mixed_numeric <- lm(scale(NMDS2) ~T+T:Stressor_numeric, data=mds_whole_res_subset)
nmds2_subset_slope <- tidy(anova_NMDS2_mixed_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
nmds2_subset_slope$organisation="community"
nmds2_subset_slope$variable="NMDS2_subpopulation"
nmds2_subset_slope$Fertilizer <- "Yes"
autoplot(anova_NMDS2_mixed_numeric)
# Chunk 57
#Shannon
anova_diversity_numeric <- lm(scale(Shannon) ~T+T:Stressor_numeric, data=div_raw)
shannon_slope <- tidy(anova_diversity_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
shannon_slope$organisation="community"
shannon_slope$variable="species_richness"
shannon_slope$Fertilizer <- "Yes"
autoplot(anova_diversity_numeric)
# Chunk 58
#Tychonema
# anova_tychonea_numeric <- lm(Abundance ~T+T:Stressor_numeric, data=df_cyano)
# b <- boxcox(anova_tychonea_numeric, plotit = TRUE, lambda = seq(-3, 3, by = 0.1))
anova_tychonea_numeric <- lm(scale(logit(Abundance)) ~T+T:Stressor_numeric, data=df_cyano)
tychonema_slope <- tidy(anova_tychonea_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
tychonema_slope$organisation="species"
tychonema_slope$variable="Tychonema"
tychonema_slope$Fertilizer <- "Yes"
autoplot(anova_tychonea_numeric)
# Chunk 59
#Sulfuri
anova_sulfuri_numeric <- lm(scale(Abundance^(1/3)) ~T+T:Stressor_numeric, data=df_sulfuri)
sulfuri_slope <- tidy(anova_sulfuri_numeric,conf.int = TRUE) %>%
filter(term!="(Intercept)", term!="T24", term !="T28")
sulfuri_slope$organisation="species"
sulfuri_slope$variable="Sulfuricurvum"
sulfuri_slope$Fertilizer <- "Yes"
autoplot(anova_sulfuri_numeric)
# Chunk 60
all <- rbind(tychonema_slope,sulfuri_slope,shannon_slope,
nmds1_slope,nmds2_slope,nmds1_subset_slope,
nmds2_subset_slope,oxy_slope,pH_slope,
tn_slope,tc_slope)  %>%
reorder_levels(variable,order=c("Tychonema","Sulfuricurvum","NMDS1",
"NMDS2","NMDS1_subpopulation",
"NMDS2_subpopulation","species_richness",
"oxygen","pH","total nitrogen",
"total carbon"))
plot_slope <-
all %>%
ggplot(aes(x = organisation, y = estimate, colour = variable, shape=term, group=variable)) +
geom_hline(aes(yintercept=0))+
geom_errorbar(aes(ymin=conf.low, ymax=conf.high),
width=0.1,alpha=0.4,position = position_dodge(width = 0.8))+
geom_point(size = 4,position = position_dodge(width = 0.8))  +
# geom_point(colour = all$col.fert, size = 2, col="white", position = position_dodge(width = 0.8), show.legend = F)  +
labs(y="Slope [Number of drivers ]", x="Level of organisation") +
theme_bw() +
theme(axis.title.x = element_text(size = 15),
axis.text.x = element_text(size=12),
axis.title.y = element_text(size = 15),
axis.text.y = element_text(size=12)) +
scale_x_discrete(limits = c("species","community","ecosystem"))
cols <- ggplot_build(plot_slope)
cols <- unique(cols$data[[2]]$colour)
var.cols <- c("Tychonema"=cols[1],
"Sulfuricurvum"=cols[2],
"NMDS1"=cols[4],
"NMDS2"=cols[5],
"NMDS1_subpopulation"=cols[6],
"NMDS2_subpopulation"=cols[7],
"species_richness"=cols[3],
"oxygen"=cols[8],
"pH"=cols[9],
"total nitrogen"=cols[10],
"total carbon"=cols[11])
all$col.fert <- ifelse(all$Fertilizer=="Yes",var.cols[all$variable],"white")
all$term2 <- ifelse(grepl("20", all$term, fixed = TRUE),"20°C",
ifelse(grepl("24", all$term, fixed = TRUE),"24°C","28°C"))
plot_slope <-
all %>%
ggplot(aes(x = organisation, y = estimate, colour = variable, shape=term2, group=interaction(term,variable))) +
geom_hline(aes(yintercept=0))+
geom_errorbar(aes(ymin=conf.low, ymax=conf.high), size=0.6,
width=0.3,position = position_dodge(width = 0.8))+
geom_point(size = 4,position = position_dodge(width = 0.8))  +
geom_point(col = all$col.fert, size = 2, position = position_dodge(width = 0.8), show.legend = F)  +
labs(y="Slope [Number of drivers ]", x="Level of organisation",
shape="Temperature", colour="Variable") +
theme_bw() +
theme(axis.title.x = element_text(size = 15),
axis.text.x = element_text(size=12),
axis.title.y = element_text(size = 15),
axis.text.y = element_text(size=12)) +
scale_x_discrete(limits = c("species","community","ecosystem"))
plot_slope
